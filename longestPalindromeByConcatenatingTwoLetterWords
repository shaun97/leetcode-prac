class Solution:
    def longestPalindrome(self, words: List[str]) -> int:
        words_dict = {}
        for word in words:
            if word not in words_dict:
                words_dict[word] = 0
            words_dict[word] += 1
        length = 0
        addedRepeat = False
        for k,v in words_dict.items():
            if k[::-1] in words_dict:
                if k[::-1] != k:
                    length += (min(words_dict[k], words_dict[k[::-1]])*4)
                    words_dict[k[::-1]] = 0
                    words_dict[k] = 0
                elif words_dict[k] >= 2:
                    length += ((words_dict[k] // 2) * 2 * 2)
                    words_dict[k] -= ((words_dict[k] // 2) * 2)
                if not addedRepeat and k[0] == k[1] and words_dict[k] == 1:
                    words_dict[k] = 0
                    length += 2
                    addedRepeat = True
        return length